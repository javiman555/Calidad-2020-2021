plugins {
    id 'com.android.application'
    id "org.sonarqube" version "3.1.1"
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'realm-android'
    id 'kotlin-android-extensions'
}
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

def cucumber_javaVersion = "4.8.1"
//def cucumberVersion = "1.2.4"

repositories {
    google()
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.example.reinventatecovid"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("keystore.jks")
            storePassword "123456"
            keyAlias "calabash"
            keyPassword "123456"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}



configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}


task cucumber() {
    dependsOn assemble
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'gradle.cucumber', 'src/test/resources']
        }
    }
}

build.dependsOn cucumber



dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.google.android:android:4.1.1.4'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //implementation 'org.codehaus.groovy:groovy-all:2.4.3'

    //implementation 'info.cukes:cucumber-java:1.2.4'
    //implementation 'info.cukes:cucumber-junit:1.2.4'
    //testImplementation "io.cucumber:cucumber-java:$cucumberVersion"
    //testImplementation "info.cukes:cucumber-junit:$cucumberVersion"
    //testImplementation "info.cukes:cucumber-groovy:$cucumberVersion"
    //testImplementation "io.cucumber:cucumber-java:$cucumber_javaVersion"
    //testImplementation "info.cukes:cucumber-junit:$cucumber_javaVersion"
    //testImplementation "info.cukes:cucumber-groovy:$cucumber_javaVersion"

    //androidTestImplementation project(":cucumber-android")
    //androidTestImplementation "io.cucumber:cucumber-picocontainer:$cucumber_javaVersion"
    testImplementation 'io.cucumber:cucumber-java8:1.2.6'
    testImplementation 'io.cucumber:cucumber-junit:1.2.6'



}



sonarqube {
    properties {
        property "sonar.projectKey", "ziyao987_CSPrueba"
        property "sonar.organization", "ziyao987"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

allprojects {
    configurations.all {
        resolutionStrategy.force 'org.objenesis:objenesis:2.6'
    }
}